---
import Layout from "src/components/astro/Layout.astro";

const formData = {
  email: "",
  contrasenia: "",
};
---

<Layout>
  <div class="h-full flex items-center justify-center p-4 md:py-4 md:px-46 xl:px-86 2xl:px-135">
    <div class="h-full w-full shadow-lg bg-white/50 p-10 rounded-xl">
      <div class="text-center space-y-2 mb-4">
        <h2 class="text-3xl font-semibold text-gray-900">Iniciar sesión</h2>
        <h4 class="text-gray-600">Bienvenido de nuevo</h4>
      </div>
      <div>
        <form id="login-form" class="space-y-4">
          <div class="space-y-2">
            <label for="email" class="text-sm font-medium text-gray-700">
              Email
            </label>
            <div class="pb-[3px] focus-within:gradient-border">
            <input
              id="email"
              name="email"
              type="email"
              placeholder="juanperez@example.com"
              autocomplete="email"
              value={formData.email}
              oninput="handleInputChange"
              required
              class="px-4 input"
            />
          </div>
          </div>

          <div class="space-y-2">
            <label for="contrasenia" class="text-sm font-medium text-gray-700">
              Contraseña
            </label>
            <div class="relative pb-[3px] focus-within:gradient-border">
              <input
                id="contrasenia"
                name="contrasenia"
                type="password"
                placeholder="••••••••••"
                autocomplete="current-password"
                required
                class="px-4 input"
              />
              <button
                id="togglePassword"
                type="button"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700 focus:text-gray-700 focus:outline-none"
                aria-label="Mostrar contraseña"
              >
                <svg id="eyeIcon" xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M10.585 10.587a2 2 0 0 0 2.829 2.828" />
                  <path d="M16.681 16.673A8.7 8.7 0 0 1 12 18q-5.4 0-9-6q1.908-3.18 4.32-4.674m2.86-1.146A9 9 0 0 1 12 6q5.4 0 9 6q-1 1.665-2.138 2.87M3 3l18 18" />
                </svg>
              </button>
            </div>

            <div class="flex w-full justify-end">
              <a
                href="/iniciar-sesion"
                class="text-sm text-blue-700 hover:text-blue-900 font-medium hover:underline transition-colors duration-200"
              >
                ¿Olvidaste tu contraseña?
              </a>
            </div>
          </div>

        <div class="w-full h-[1px] bg-gray-500 my-4"></div>
          
          <button
            type="submit"
            class="w-full button"
          >
            Ingresar
          </button>
        </form>
      </div>
        
        <div class="mt-6 text-center">
          <p class="text-sm text-gray-800">
            ¿No tenés una cuenta?{" "}
            <a
              href="/registrarse"
              class="text-blue-700 hover:text-blue-900 font-medium hover:underline transition-colors duration-200"
            >
              Registrate
            </a>
          </p>
        </div>
      </div>
    </div>
  </div>
</Layou>

<script>
  import { login } from "../../api/auth";

  declare global {
    interface Window {
      handleInputChange: (e: Event) => void;
    }
  }
  interface FormData {
    email: string;
    contrasenia: string;
  }

  document.addEventListener('DOMContentLoaded', () => {
    // Manejo del formulario
    const form = document.getElementById('login-form');
    
    // Inicialización del objeto formData
    let formData = {
      email: "",
      contrasenia: ""
    };


    // Función para manejar el envío del formulario
    async function handleSubmit(e: Event) {
      e.preventDefault();
      
      try {
        if (!formData.email || !formData.contrasenia) {
          alert('Por favor completa todos los campos requeridos');
          return;
        }

        const usuario = await login(formData.email, formData.contrasenia);

        if (usuario) {
          window.location.href = "/";
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }

    // Asignar eventos
    if (form) {
      form.addEventListener('submit', handleSubmit);
    }
    
    // Función para manejar cambios en los inputs
    window.handleInputChange = function (e: Event) {
      const target = e.target as HTMLInputElement;

      //if (target.name) {
        formData[target.name as keyof FormData] = target.value;
      //}
    }

    // Asignar eventos de cambio a todos los inputs
    document.querySelectorAll('input').forEach(input => {
      input.addEventListener('input', window.handleInputChange);
    });

    // Manejo del toggle de contraseña
    const togglePassword = () => {
      const passwordInput = document.getElementById('contrasenia') as HTMLInputElement;
      const eyeIcon = document.getElementById('eyeIcon') as HTMLAnchorElement;
      const isPassword = passwordInput.type === 'password';
      
      passwordInput.type = isPassword ? 'text' : 'password';
      eyeIcon.innerHTML = isPassword ? 
        `<path d="M10.585 10.587a2 2 0 0 0 2.829 2.828" />
        <path d="M16.681 16.673A8.7 8.7 0 0 1 12 18q-5.4 0-9-6q1.908-3.18 4.32-4.674m2.86-1.146A9 9 0 0 1 12 6q5.4 0 9 6q-1 1.665-2.138 2.87M3 3l18 18" />` : 
        `<path d="M10 12a2 2 0 1 0 4 0a2 2 0 0 0-4 0" />
        <path d="M21 12q-3.6 6-9 6t-9-6q3.6-6 9-6t9 6" />`;
    };

    document.getElementById('togglePassword')?.addEventListener('click', togglePassword);
  });
</script>